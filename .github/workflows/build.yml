name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      CPPFLAGS: "-I/home/runner/hdf5/include -I/home/runner/netcdf-c/include"
      LDFLAGS: "-L/home/runner/hdf5/lib -L/home/runner/netcdf-c/lib"

    steps:
    - uses: actions/checkout@v2
    - name: Installs
      run: |
        sudo apt-get install doxygen graphviz wget gfortran libjpeg-dev libz-dev
    - name: cache-hdf5
      id: cache-hdf5
      uses: actions/cache@v2
      with:
        path: ~/hdf5
        key: hdf5-${{ runner.os }}-1.10.7

    - name: build-hdf5
      if: steps.cache-hdf5.outputs.cache-hit != 'true'
      run: |
        set -x
        wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.7/src/hdf5-1.10.7.tar.gz &> /dev/null
        tar -xzf hdf5-1.10.7.tar.gz
        pushd hdf5-1.10.7
        ./configure --prefix=/home/runner/hdf5 --disable-tools --disable-fortran --disable-cxx 
        make
        sudo make install
        popd
    - name: build-netcdf-c
      run: |
        set -x
        git clone -b ejh_quantize_2 https://github.com/edwardhartnett/netcdf-c.git
        pushd netcdf-c
        autoreconf -i
        ./configure --prefix=/home/runner/netcdf-c --disable-dap --disable-utilities
        make -j
        sudo make install
        popd
    # - name: cmake build
    #   run: |
    #     set -x
    #     gcc --version
    #     export LD_LIBRARY_PATH="/home/runner/netcdf-c/lib:/home/runner/hdf5/lib:$LD_LIBRARY_PATH"
    #     mkdir build
    #     cd build
    #     cmake -Wno-dev -DNetCDF_C_LIBRARY=/home/runner/netcdf-c/lib/libnetcdf.so -DNetCDF_C_INCLUDE_DIR=/home/runner/netcdf-c/include .. || (cat CMakeFiles/CMakeOutput.log && cat CMakeFiles/CMakeError.log)
    #     make VERBOSE=1
    #     make tests VERBOSE=1
#        ctest -VV
    - name: autotools build
      run: |
        set -x
        gcc --version
        autoreconf -i
        ./configure
        make -j check
        
        
